plugins {
    id 'com.android.application'
    id 'kotlin-android'
}

apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion 29
    buildToolsVersion "30.0.2"

    defaultConfig {
        applicationId "dev.techpolis.studservice"
        minSdkVersion 21
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    buildFeatures {
        viewBinding true
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
}

dependencies {

    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation "androidx.core:core-ktx:${var.coreVersion}"
    implementation "androidx.appcompat:appcompat:${var.appCompatVersion}"
    implementation "com.google.android.material:material:${var.materialVersion}"

    // RecyclerView
    implementation "androidx.recyclerview:recyclerview:${var.recyclerviewVersion}"

    // Room components
    implementation "androidx.room:room-ktx:${var.roomVersion}"
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    kapt "androidx.room:room-compiler:${var.roomVersion}"
    implementation "androidx.room:room-runtime:${var.roomVersion}"
    androidTestImplementation "androidx.room:room-testing:${var.roomVersion}"

    // Lifecycle components
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:${var.lifecycleVersion}"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:${var.lifecycleVersion}"
    implementation "androidx.lifecycle:lifecycle-common-java8:${var.lifecycleVersion}"

    // Fragment components
    implementation "androidx.fragment:fragment-ktx:${var.fragmentVersion}"
    debugImplementation "androidx.fragment:fragment-testing:${var.fragmentVersion}"

    // Navigation
    implementation "androidx.navigation:navigation-fragment-ktx:${var.navVersion}"
    implementation "androidx.navigation:navigation-ui-ktx:${var.navVersion}"
    androidTestImplementation "androidx.navigation:navigation-testing:${var.navVersion}"

    // Kotlin components
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    api "org.jetbrains.kotlinx:kotlinx-coroutines-core:${var.coroutines}"
    api "org.jetbrains.kotlinx:kotlinx-coroutines-android:${var.coroutines}"

    // UI
    implementation "androidx.constraintlayout:constraintlayout:${var.constraintLayoutVersion}"
    implementation "com.google.android.material:material:${var.materialVersion}"

    // Gson
    implementation "com.google.code.gson:gson:${var.gsonVersion}"

    //Internet
    implementation "com.squareup.retrofit2:retrofit:${var.retrofitVersion}"
    implementation "com.squareup.retrofit2:converter-gson:${var.retrofitVersion}"
    implementation "com.squareup.okhttp3:okhttp:${var.okHttpVersion}"
    implementation "com.squareup.okhttp3:logging-interceptor:${var.okHttpVersion}"

    //Dagger
    implementation "com.google.dagger:dagger:${var.daggerVersion}"
    annotationProcessor "com.google.dagger:dagger-compiler:${var.daggerVersion}"
    implementation "com.google.dagger:dagger-android:${var.daggerVersion}"
    implementation "com.google.dagger:dagger-android-support:${var.daggerVersion}"
    annotationProcessor "com.google.dagger:dagger-android-processor:${var.daggerVersion}"

    //Glide
    implementation "com.github.bumptech.glide:glide:${var.glideVersion}"
    annotationProcessor "com.github.bumptech.glide:compiler:${var.glideVersion}"

    //Testing
    testImplementation "junit:junit:${var.junitVersion}"
    androidTestImplementation "androidx.test.ext:junit:${var.androidxJunitVersion}"
    androidTestImplementation "androidx.test.espresso:espresso-core:${var.espressoVersion}"
}